name: Publish

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  publish-docker-images:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install environment
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: Install Python Poetry
        uses: abatilo/actions-poetry@v2.1.4
        with:
          poetry-version: 1.1.11

      - name: Login to Docker registry
        run: |
          echo ${{ secrets.DOCKER_REGISTRY_TOKEN }} | docker login ghcr.io -u ${{ secrets.DOCKER_REGISTRY_ID }} --password-stdin

      - name: Set up target version
        id: project_context
        run: |
          version=`poetry version -s --no-ansi -n`
          echo "::set-output name=version::$version"
          echo "::set-output name=major=$(echo $version | cut -d. -f1)"
          echo "::set-output name=minor=$(echo $version | cut -d. -f2)"
          echo "::set-output name=revision=$(echo $version | cut -d. -f3)"
          echo "::set-output name=image::$GITHUB_REPOSITORY"

      - name: Build and publish image(s)
        run: |
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            echo "Publish docker image for branch"
            docker build \
              -t ghcr.io/${{ steps.project_context.outputs.image }}:${{ steps.project_context.outputs.major }} \
              -t ghcr.io/${{ steps.project_context.outputs.image }}:${{ steps.project_context.outputs.major }}.${{ steps.project_context.outputs.minor }} \
              -t ghcr.io/${{ steps.project_context.outputs.image }}:${{ steps.project_context.outputs.version }} \
              -t ghcr.io/${{ steps.project_context.outputs.image }}:latest \
              .
          elif [[ $GITHUB_EVENT_NAME == pull_request ]]; then
            echo "Publish docker image for branch"
            docker build \
              -t ghcr.io/${{ steps.project_context.outputs.image }}:branch \
              .
          else
            echo "Publish docker image for nightly"
            docker build \
              -t ghcr.io/${{ steps.project_context.outputs.image }}:nightly \
              .
          fi
          docker push ghcr.io/${{ steps.project_context.outputs.image }} --all-tags
